{"version":3,"file":"Updates.js","sourceRoot":"","sources":["../../src/integrations/Updates.ts"],"names":[],"mappings":";;;AAAA,yDAAuD;AACvD,MAAM,WAAW,GAAG,sCAAkB,CAAC,WAAW,IAAK,EAAU,CAAC;AAErD,QAAA,gBAAgB,GAAY,WAAW,CAAC,gBAAgB,IAAI,KAAK,CAAC;AAClE,QAAA,cAAc,GAAW,WAAW,CAAC,cAAc,IAAI,SAAS,CAAC;AACjE,QAAA,OAAO,GAAkB,WAAW,CAAC,OAAO,IAAI,IAAI,CAAC;AACrD,QAAA,QAAQ,GACnB,WAAW,CAAC,QAAQ,IAAI,OAAO,WAAW,CAAC,QAAQ,KAAK,QAAQ;IAC9D,CAAC,CAAC,WAAW,CAAC,QAAQ,CAAC,WAAW,EAAE;IACpC,CAAC,CAAC,IAAI,CAAC;AACE,QAAA,cAAc,GAAkB,WAAW,CAAC,cAAc,IAAI,IAAI,CAAC;AAEnE,QAAA,QAAQ,GACnB,CAAC,WAAW,CAAC,cAAc,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,QAAQ,CAAC;IAC5F,EAAE,CAAC","sourcesContent":["import { NativeModulesProxy } from 'expo-modules-core';\nconst ExpoUpdates = NativeModulesProxy.ExpoUpdates ?? ({} as any);\n\nexport const isEmbeddedLaunch: boolean = ExpoUpdates.isEmbeddedLaunch || false;\nexport const releaseChannel: string = ExpoUpdates.releaseChannel ?? 'default';\nexport const channel: string | null = ExpoUpdates.channel ?? null;\nexport const updateId: string | null =\n  ExpoUpdates.updateId && typeof ExpoUpdates.updateId === 'string'\n    ? ExpoUpdates.updateId.toLowerCase()\n    : null;\nexport const runtimeVersion: string | null = ExpoUpdates.runtimeVersion ?? null;\n\nexport const manifest =\n  (ExpoUpdates.manifestString ? JSON.parse(ExpoUpdates.manifestString) : ExpoUpdates.manifest) ??\n  {};"]}