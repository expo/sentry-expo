{"version":3,"file":"upload-sourcemaps.js","sourceRoot":"","sources":["../../src/hooks/upload-sourcemaps.ts"],"names":[],"mappings":"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","sourcesContent":["import spawnAsync from '@expo/spawn-async';\nimport path from 'path';\nimport rimraf from 'rimraf';\nimport mkdirp from 'mkdirp';\nimport fs from 'fs';\nimport sentryCliBinary from '@sentry/cli';\n\ntype ExpoSentryConfig = {\n  organization: string;\n  project: string;\n  authToken: string;\n  url: string;\n} & SentryUploadOptions;\n\ntype SentryUploadOptions = {\n  release: string;\n  deployEnv: string | null;\n  setCommits: boolean | string;\n  useGlobalSentryCli: boolean;\n  distribution: string;\n  platform?: string | undefined;\n};\n\ntype Options = {\n  log: (message: string) => void;\n  projectRoot: string;\n  androidManifest: Manifest;\n  androidBundle: string;\n  androidSourceMap: string;\n  iosManifest: Manifest;\n  iosSourceMap: string;\n  iosBundle: string;\n  config?: ExpoSentryConfig;\n};\n\ntype Manifest = { revisionId: string; version: string };\n\nmodule.exports = async (options: Options) => {\n  let {\n    config,\n    log,\n    iosBundle,\n    iosSourceMap,\n    iosManifest,\n    androidBundle,\n    androidSourceMap,\n    projectRoot,\n  } = options;\n\n  const tmpdir = path.resolve(projectRoot, '.tmp', 'sentry');\n\n  rimraf.sync(tmpdir);\n  mkdirp.sync(tmpdir);\n\n  try {\n    // We use the same filenames for sourcemaps as Sentry does (even though the naming is unfortunate)\n    fs.writeFileSync(tmpdir + '/main.jsbundle', iosBundle, 'utf-8');\n    fs.writeFileSync(tmpdir + '/main.jsbundle.map', iosSourceMap, 'utf-8');\n    fs.writeFileSync(tmpdir + '/index.android.bundle', androidBundle, 'utf-8');\n    fs.writeFileSync(tmpdir + '/index.android.bundle.map', androidSourceMap, 'utf-8');\n\n    if (!config) {\n      log('No config found in app.json, falling back to environment variables...');\n    }\n\n    const childProcessEnv = Object.assign({}, process.env, {\n      SENTRY_ORG: (config && config.organization) || process.env.SENTRY_ORG,\n      SENTRY_PROJECT: (config && config.project) || process.env.SENTRY_PROJECT,\n      SENTRY_AUTH_TOKEN: (config && config.authToken) || process.env.SENTRY_AUTH_TOKEN,\n      SENTRY_URL: (config && config.url) || process.env.SENTRY_URL || 'https://sentry.io/',\n    });\n\n    const uploadOptions = getUploadOptions(config, process.env, iosManifest);\n    await createAndUploadRelease(uploadOptions, childProcessEnv, projectRoot, tmpdir, log);\n  } catch (e) {\n    log(messageForError(e));\n    log(\n      `Verify that your Sentry configuration in app.json is correct and refer to https://docs.expo.io/versions/latest/guides/using-sentry.html`\n    );\n  } finally {\n    rimraf.sync(tmpdir);\n  }\n};\n\nfunction getUploadOptions(\n  config: ExpoSentryConfig | undefined,\n  env: NodeJS.ProcessEnv,\n  manifest: Manifest\n): SentryUploadOptions {\n  const { release, deployEnv, setCommits, useGlobalSentryCli, distribution } = config || {};\n  return {\n    release: release || env.SENTRY_RELEASE || manifest.revisionId,\n    deployEnv: deployEnv || env.SENTRY_DEPLOY_ENV || null,\n    setCommits: setCommits || env.SENTRY_SET_COMMITS || false,\n    useGlobalSentryCli: !!useGlobalSentryCli,\n    distribution: distribution || env.SENTRY_DIST || manifest.version,\n  };\n}\n\nfunction extensionsForPlatform(platform: string = ''): string[] {\n  if (platform === 'android') {\n    return ['--ext', 'bundle', '--ext', 'map', '--ignore', 'main.jsbundle.map'];\n  } else if (platform === 'ios') {\n    return ['--ext', 'jsbundle', '--ext', 'map', '--ignore', 'index.android.bundle.map'];\n  } else {\n    // Otherwise let's just pass in all the sourcemap files\n    return ['--ext', 'jsbundle', '--ext', 'bundle', '--ext', 'map'];\n  }\n}\n\nasync function createAndUploadRelease(\n  userOptions: SentryUploadOptions,\n  childProcessEnv: NodeJS.ProcessEnv,\n  projectRoot: string,\n  tmpdir: string,\n  log: (message: string) => void\n) {\n  const {\n    useGlobalSentryCli,\n    release,\n    distribution,\n    setCommits,\n    deployEnv,\n    platform,\n  } = userOptions;\n  const sentryCliBinaryPath = useGlobalSentryCli ? 'sentry-cli' : sentryCliBinary.getPath();\n\n  let output;\n  let createReleaseResult = await spawnAsync(sentryCliBinaryPath, ['releases', 'new', release], {\n    cwd: tmpdir,\n    env: childProcessEnv,\n  });\n\n  output = createReleaseResult.stdout.toString();\n  log(output);\n\n  let uploadResult = await spawnAsync(\n    sentryCliBinaryPath,\n    [\n      'releases',\n      'files',\n      release,\n      'upload-sourcemaps',\n      '.',\n      ...extensionsForPlatform(platform),\n      '--rewrite',\n      '--dist',\n      distribution,\n      '--strip-prefix',\n      projectRoot,\n    ],\n    {\n      cwd: tmpdir,\n      env: childProcessEnv,\n    }\n  );\n\n  output = uploadResult.stdout.toString();\n  log(output);\n\n  if (setCommits) {\n    let commitsResult = await spawnAsync(\n      sentryCliBinaryPath,\n      ['releases', 'set-commits', '--auto', release],\n      {\n        env: childProcessEnv,\n      }\n    );\n\n    output = commitsResult.stdout.toString();\n    log(output);\n  }\n\n  let finalizeReleaseResult = await spawnAsync(\n    sentryCliBinaryPath,\n    ['releases', 'finalize', release],\n    {\n      env: childProcessEnv,\n    }\n  );\n\n  output = finalizeReleaseResult.stdout.toString();\n  log(output);\n\n  if (deployEnv) {\n    let deployResult = await spawnAsync(\n      sentryCliBinaryPath,\n      ['releases', 'deploys', release, 'new', '-e', deployEnv],\n      {\n        env: childProcessEnv,\n      }\n    );\n\n    // filter out unnamed deloy\n    output = deployResult.stdout.toString().replace('unnamed ', '');\n    log(output);\n  }\n}\n\nfunction messageForError(e: Error & { stderr?: string }) {\n  let message = e.stderr ? e.stderr.replace(/^\\s+|\\s+$/g, '') : e.message;\n  if (message) {\n    if (message.indexOf('error: ') === 0) {\n      message = message.replace('error: ', '');\n    }\n    return `Error uploading sourcemaps to Sentry: ${message}`;\n  }\n\n  return 'Error uploading sourcemaps to Sentry';\n}\n"]}